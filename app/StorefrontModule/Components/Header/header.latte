<nav class="navbar navbar-expand-lg navbar-light bg-light border-bottom">
    <div class="container">
        <a class="ajax navbar-brand" href="/">
            <img src="/images/logo.png" height="50">
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto dropdown-menu-top-level">
                {control navigation}
            </ul>

            <form x-data="{ query: '', items: [] }" x-init="SearchBar" class="d-flex" style="position: relative;">
                <input x-model="query" type="text" class="form-control me-2" placeholder="Search" x-on:click="open" x-on:click.away="close">
                <div class="list-group" style="position: absolute;top: 0;margin-top: 45px">
                    <template x-for="item in items" :key="item.url">
                        <a :href="item.url" class="list-group-item list-group-item-action" x-text="item.name"></a>
                    </template>
                </div>
            </form>

            {if $user->isLoggedIn()}
                {if $user->isAllowed('Admin:Dashboard', 'view')}
                    <a class="btn btn-outline-secondary me-2" href="{plink :Admin:Dashboard:default}">Admin</a>
                {/if}
                <a class="ajax btn btn-outline-secondary me-2" href="{plink User:default}">{$user->identity->name}</a>
            {else}
                <a class="ajax btn btn-outline-secondary me-2" href="{plink User:login}">Login</a>
            {/if}
            {control cart}
        </div>
    </div>
</nav>

<script n:syntax=off>
function SearchBar () {
    this.$watch('query', async () => {
        await this.search()
    })

    this.search = async () => {
        if (!this.query) {
            this.items = []
            return
        }

        const response = await fetch(`/search?query=${encodeURIComponent(this.query)}`)
        this.items = await response.json()
    }

    this.open = async () => {
        await this.search()
    }

    this.close = () => {
        this.items = []
    }
}
</script>
